[1/9] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj
[2/9] Linking C static library esp-idf\main\libmain.a
[3/9] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D C:\Users\SANTHARAJ\IDF-Files\IDF-PROJECT\PROJECT_TRY1\project-name\build\bootloader\esp-idf\esptool_py && C:\Espressif\python_env\idf5.2_py3.11_env\Scripts\python.exe C:/Users/SANTHARAJ/esp/v5.2.2/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 C:/Users/SANTHARAJ/IDF-Files/IDF-PROJECT/PROJECT_TRY1/project-name/build/bootloader/bootloader.bin"
Bootloader binary size 0x55f0 bytes. 0x1a10 bytes (23%) free.
[4/7] Generating ld/sections.ld
[5/7] Linking CXX executable project-name.elf
[6/7] Generating binary image from built executable
esptool.py v4.7.0
Creating esp32s2 image...
Merged 2 ELF sections
Successfully created esp32s2 image.
Generated C:/Users/SANTHARAJ/IDF-Files/IDF-PROJECT/PROJECT_TRY1/project-name/build/project-name.bin
[7/7] cmd.exe /C "cd /D C:\Users\SANTHARAJ\IDF-Files\IDF-PROJECT\PROJECT_TRY1\project-name\build\esp-idf\esptool_py && C:\Espressif\python_env\idf5.2_py3.11_env\Scripts\python.exe C:/Users/SANTHARAJ/esp/v5.2.2/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app C:/Users/SANTHARAJ/IDF-Files/IDF-PROJECT/PROJECT_TRY1/project-name/build/partition_table/partition-table.bin C:/Users/SANTHARAJ/IDF-Files/IDF-PROJECT/PROJECT_TRY1/project-name/build/project-name.bin"
project-name.bin binary size 0xbc690 bytes. Smallest app partition is 0x100000 bytes. 0x43970 bytes (26%) free.
