[1/10] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D C:\Users\SANTHARAJ\IDF-Files\IDF-PROJECT\gpioconfigs\build\bootloader\esp-idf\esptool_py && C:\Espressif\python_env\idf5.2_py3.11_env\Scripts\python.exe C:/Users/SANTHARAJ/esp/v5.2.2/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 C:/Users/SANTHARAJ/IDF-Files/IDF-PROJECT/gpioconfigs/build/bootloader/bootloader.bin"
Bootloader binary size 0x55f0 bytes. 0x1a10 bytes (23%) free.
[2/8] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/gpioconfigs.c.obj
[3/8] Linking C static library esp-idf\main\libmain.a
[4/8] Generating ld/sections.ld
[5/8] Building C object CMakeFiles/gpioconfigs.elf.dir/project_elf_src_esp32s2.c.obj
[6/8] Linking CXX executable gpioconfigs.elf
[7/8] Generating binary image from built executable
esptool.py v4.7.0
Creating esp32s2 image...
Merged 2 ELF sections
Successfully created esp32s2 image.
Generated C:/Users/SANTHARAJ/IDF-Files/IDF-PROJECT/gpioconfigs/build/gpioconfigs.bin
[8/8] cmd.exe /C "cd /D C:\Users\SANTHARAJ\IDF-Files\IDF-PROJECT\gpioconfigs\build\esp-idf\esptool_py && C:\Espressif\python_env\idf5.2_py3.11_env\Scripts\python.exe C:/Users/SANTHARAJ/esp/v5.2.2/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app C:/Users/SANTHARAJ/IDF-Files/IDF-PROJECT/gpioconfigs/build/partition_table/partition-table.bin C:/Users/SANTHARAJ/IDF-Files/IDF-PROJECT/gpioconfigs/build/gpioconfigs.bin"
gpioconfigs.bin binary size 0x2f880 bytes. Smallest app partition is 0x100000 bytes. 0xd0780 bytes (81%) free.
